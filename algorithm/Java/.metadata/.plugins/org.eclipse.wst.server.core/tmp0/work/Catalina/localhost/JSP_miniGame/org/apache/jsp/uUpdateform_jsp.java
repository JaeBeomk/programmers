/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.23
 * Generated at: 2022-11-20 08:46:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.io.PrintWriter;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import dao.Udao;
import dto.User;

public final class uUpdateform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("dao.Udao");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("dto.User");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
request.setCharacterEncoding("utf-8"); 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/custom.css\">\r\n");
      out.write("<title>회원수정</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      dto.User user = null;
      user = (dto.User) _jspx_page_context.getAttribute("user", jakarta.servlet.jsp.PageContext.PAGE_SCOPE);
      if (user == null){
        user = new dto.User();
        _jspx_page_context.setAttribute("user", user, jakarta.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("user"), "userID", request.getParameter("userID"), request, "userID", false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("user"), "userPassword", request.getParameter("userPassword"), request, "userPassword", false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("user"), "userName", request.getParameter("userName"), request, "userName", false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("user"), "userGender", request.getParameter("userGender"), request, "userGender", false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("user"), "userEmail", request.getParameter("userEmail"), request, "userEmail", false);
      out.write('\r');
      out.write('\n');

String userID = request.getParameter("userID");
System.out.println(userID+"유저 아이디");
Udao udao=new Udao();

User u=udao.uSelect(userID);
String dbid = u.getUserID();
String dbpw = u.getUserPassword();
String dbname = u.getUserName();
String dbemail = u.getUserEmail(); 
System.out.println(dbid);
System.out.println(dbpw);
System.out.println(dbname);
System.out.println(dbemail);

      out.write("\r\n");
      out.write(" 	<nav class=\"navbar navbar-default\">\r\n");
      out.write("		<div class=\"navbar-header\">\r\n");
      out.write("			<button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\r\n");
      out.write("			<span class=\"icon-bar\"></span>\r\n");
      out.write("			<span class=\"icon-bar\"></span>\r\n");
      out.write("			<span class=\"icon-bar\"></span>\r\n");
      out.write("			</button>\r\n");
      out.write("			<a class=\"navbar-brand\" href=\"./main.jsp\">jsp 게시판웹</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n");
      out.write("			<ul class=\"nav navbar-nav\">\r\n");
      out.write("				<li class=\"active\"><a href=\"./main.jsp\">메인</a></li>\r\n");
      out.write("				<li><a href=\"../bbs.jsp\">게시판</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("	</nav>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("		<div class=\"col-lg-9\">\r\n");
      out.write("			<div class=\"jumbotron\" style=\"padding-top:20px;\">\r\n");
      out.write("				<form method=\"post\" action=\"");
      out.print( request.getContextPath() );
      out.write("/uUpdateAction.jsp?\">\r\n");
      out.write("				<h3 style=\"text-align:center;\">회원수정</h3>\r\n");
      out.write("				<div class=\"form-group\">아이디\r\n");
      out.write("					<input type=\"text\" class=\"form-control\" placeholder=\"아이디\" name=\"userID\" value=\"");
      out.print(userID );
      out.write("\" maxlength=\"20\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"form-group\" >비밀번호\r\n");
      out.write("					<input type=\"text\"  id=\"userpw\" class=\"form-control\" placeholder=\"비밀번호\" name=\"userPassword\" value=\"");
      out.print(dbpw);
      out.write("\" maxlength=\"20\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"form-group\" >비밀번호 확인\r\n");
      out.write("					<input type=\"password\" id=\"checkPw\" class=\"form-control\" placeholder=\"비밀번호 확인\"  maxlength=\"20\">\r\n");
      out.write("					<p style=\"font-size:font-size: 15px;\"></p>\r\n");
      out.write("				</div>				\r\n");
      out.write("				<div class=\"form-group\">이름\r\n");
      out.write("					<input type=\"text\" class=\"form-control\" placeholder=\"이름\" name=\"userName\" value=\"");
      out.print(dbname);
      out.write("\" maxlength=\"20\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"form-group\">이메일\r\n");
      out.write("				<input type=\"email\" class=\"form-control\" placeholder=\"이메일\" name=\"userEmail\" value=\"");
      out.print(dbemail );
      out.write("\" maxlength=\"20\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<input type=\"submit\" class=\"btn btn-primary form-control\" value=\"회원 수정\">				\r\n");
      out.write("	\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("<script>\r\n");
      out.write("const $checkPw = document.getElementById('checkPw');\r\n");
      out.write("$checkPw.addEventListener('blur', function(){\r\n");
      out.write("    console.log({event});\r\n");
      out.write("    const $PW = document.querySelector('input[name=\"userPassword\"]');\r\n");
      out.write("    const checkPw = event.target; \r\n");
      out.write("    if($PW.value != checkPw.value){\r\n");
      out.write("      checkPw.nextElementSibling.textContent = '입력하신 비밀번호와 일치하지않습니다.';\r\n");
      out.write("      checkPw.focus();\r\n");
      out.write("      return false;\r\n");
      out.write("    }\r\n");
      out.write("    checkPw.nextElementSibling.textContent = '';\r\n");
      out.write("  });\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("<script src=\"js/bootstrap.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
